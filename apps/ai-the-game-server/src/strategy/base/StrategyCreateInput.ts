/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { GameSessionWhereUniqueInput } from "../../gameSession/base/GameSessionWhereUniqueInput";
import { Type } from "class-transformer";
import { PlayerWhereUniqueInput } from "../../player/base/PlayerWhereUniqueInput";
import { ResultCreateNestedManyWithoutStrategiesInput } from "./ResultCreateNestedManyWithoutStrategiesInput";
import { ScenarioWhereUniqueInput } from "../../scenario/base/ScenarioWhereUniqueInput";

@InputType()
class StrategyCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => GameSessionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GameSessionWhereUniqueInput)
  @IsOptional()
  @Field(() => GameSessionWhereUniqueInput, {
    nullable: true,
  })
  gameSession?: GameSessionWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PlayerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlayerWhereUniqueInput)
  @IsOptional()
  @Field(() => PlayerWhereUniqueInput, {
    nullable: true,
  })
  player?: PlayerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ResultCreateNestedManyWithoutStrategiesInput,
  })
  @ValidateNested()
  @Type(() => ResultCreateNestedManyWithoutStrategiesInput)
  @IsOptional()
  @Field(() => ResultCreateNestedManyWithoutStrategiesInput, {
    nullable: true,
  })
  results?: ResultCreateNestedManyWithoutStrategiesInput;

  @ApiProperty({
    required: false,
    type: () => ScenarioWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ScenarioWhereUniqueInput)
  @IsOptional()
  @Field(() => ScenarioWhereUniqueInput, {
    nullable: true,
  })
  scenario?: ScenarioWhereUniqueInput | null;
}

export { StrategyCreateInput as StrategyCreateInput };
