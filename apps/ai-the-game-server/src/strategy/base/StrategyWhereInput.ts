/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { GameSessionWhereUniqueInput } from "../../gameSession/base/GameSessionWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { PlayerWhereUniqueInput } from "../../player/base/PlayerWhereUniqueInput";
import { ResultListRelationFilter } from "../../result/base/ResultListRelationFilter";
import { ScenarioWhereUniqueInput } from "../../scenario/base/ScenarioWhereUniqueInput";

@InputType()
class StrategyWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => GameSessionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GameSessionWhereUniqueInput)
  @IsOptional()
  @Field(() => GameSessionWhereUniqueInput, {
    nullable: true,
  })
  gameSession?: GameSessionWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlayerWhereUniqueInput)
  @IsOptional()
  @Field(() => PlayerWhereUniqueInput, {
    nullable: true,
  })
  player?: PlayerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ResultListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ResultListRelationFilter)
  @IsOptional()
  @Field(() => ResultListRelationFilter, {
    nullable: true,
  })
  results?: ResultListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ScenarioWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ScenarioWhereUniqueInput)
  @IsOptional()
  @Field(() => ScenarioWhereUniqueInput, {
    nullable: true,
  })
  scenario?: ScenarioWhereUniqueInput;
}

export { StrategyWhereInput as StrategyWhereInput };
